{"ast":null,"code":"var _jsxFileName = \"/home/larissa/Documents/Trybe/Trybe-exerc\\xEDcios/m\\xF3dulo-II-frontend/bloco-14-testes-automatizados-com-react-testing-library/dia-1-rtl-primeiros-passos/testes-react/src/components/ValidEmail.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst verifyEmail = email => {\n  const emailRegex = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/;\n  return emailRegex.test(email);\n};\n\nconst ValidEmail = props => {\n  const {\n    email,\n    valid\n  } = props;\n  let color = 'black';\n  if (verifyEmail(email)) color = 'red';\n  console.log(valid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      \"data-testid\": \"id-email-user\",\n      style: {\n        color: {\n          color\n        }\n      },\n      children: `Valor: ${email}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: valid && (verifyEmail(email) ? 'Email Válido' : 'Email Inválido')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ValidEmail;\nValidEmail.propTypes = {\n  email: PropTypes.string.isRequired\n};\nexport default ValidEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidEmail\");","map":{"version":3,"names":["React","PropTypes","verifyEmail","email","emailRegex","test","ValidEmail","props","valid","color","console","log","propTypes","string","isRequired"],"sources":["/home/larissa/Documents/Trybe/Trybe-exercícios/módulo-II-frontend/bloco-14-testes-automatizados-com-react-testing-library/dia-1-rtl-primeiros-passos/testes-react/src/components/ValidEmail.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst verifyEmail = (email) => {\n  const emailRegex = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/;\n  return emailRegex.test(email);\n};\n\nconst ValidEmail = (props) => {\n  const { email, valid } = props;\n  let color = 'black';\n  if (verifyEmail(email)) color = 'red';\n  console.log(valid);\n  return (\n    <div>\n      <h2\n        data-testid=\"id-email-user\"\n        style={{ color: { color } }}\n      >{`Valor: ${email}`}</h2>\n      <h3>{ valid && (verifyEmail(email) ? 'Email Válido' : 'Email Inválido') }</h3>\n    </div>\n  );\n};\n\nValidEmail.propTypes = {\n  email: PropTypes.string.isRequired,\n};\n\nexport default ValidEmail;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAC7B,MAAMC,UAAU,GAAG,yCAAnB;EACA,OAAOA,UAAU,CAACC,IAAX,CAAgBF,KAAhB,CAAP;AACD,CAHD;;AAKA,MAAMG,UAAU,GAAIC,KAAD,IAAW;EAC5B,MAAM;IAAEJ,KAAF;IAASK;EAAT,IAAmBD,KAAzB;EACA,IAAIE,KAAK,GAAG,OAAZ;EACA,IAAIP,WAAW,CAACC,KAAD,CAAf,EAAwBM,KAAK,GAAG,KAAR;EACxBC,OAAO,CAACC,GAAR,CAAYH,KAAZ;EACA,oBACE;IAAA,wBACE;MACE,eAAY,eADd;MAEE,KAAK,EAAE;QAAEC,KAAK,EAAE;UAAEA;QAAF;MAAT,CAFT;MAAA,UAGG,UAASN,KAAM;IAHlB;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAA,UAAMK,KAAK,KAAKN,WAAW,CAACC,KAAD,CAAX,GAAqB,cAArB,GAAsC,gBAA3C;IAAX;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAdD;;KAAMG,U;AAgBNA,UAAU,CAACM,SAAX,GAAuB;EACrBT,KAAK,EAAEF,SAAS,CAACY,MAAV,CAAiBC;AADH,CAAvB;AAIA,eAAeR,UAAf"},"metadata":{},"sourceType":"module"}