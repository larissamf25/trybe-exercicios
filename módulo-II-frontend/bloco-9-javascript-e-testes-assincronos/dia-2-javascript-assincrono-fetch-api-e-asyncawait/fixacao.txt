1) O que é um código que é executado de modo assíncrono? Qual é a diferença disso para um código que é executado de modo síncrono?
Aquele que não interrompe a execução do restante do código durante seu processamento. Faz que algumas funcionalidades que deveriam ser independentes possam de fato ocorrer sem interdependências, agilizando o processo. 

2) Quando você tem que enfileirar várias callbacks, que problema surge?
Fica mais difícil de entender o que tá acontecendo. Não se tem controle da ordem de prioridades (melhor dividir em blocos menores).

3) Por que as Promises são uma forma de resolver esse problema?
Garante que algo só será executado se uma etapa anterior for finalizada. Ainda, condiciona o prosseguimento ao sucesso da etapa anterior e trata eventuais erros.

4) Quando você vai se comunicar com uma API, tal comunicação deve ser síncrona ou assíncrona? Lembre-se de que o serviço ao qual você está se conectando pode demorar muito ou pouco para dar retorno, pode estar fora do ar etc.
Assíncrona, para evitar que o sistema fique parado esperando o retorno da API. Entretanto, funcionalidades que dependam do retorno da API devem ser condicionadas ao sucesso deste.

5) Dada a resposta anterior, o que é fetch e para que ele serve?
Fecth é uma solicitação/requisição de uma fonte externa que retorna o acesso a um conjunto de dados que serão utilizados no código. (Tradução: 'busca').
